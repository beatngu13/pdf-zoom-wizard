name: Build

on: push

env:
  GRAALVM_VERSION: 21.3.0
  JAVA_VERSION: 11

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v2.4.0
        with:
          # fetch unshallow to enable blame for Sonar
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAALVM_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ secrets.CACHE_VERSION }}

      - name: Cache Sonar
        uses: actions/cache@v2.1.7
        with:
          path: ~/.sonar/cache/
          key: ${{ runner.os }}-sonar-${{ secrets.CACHE_VERSION }}

      - name: Install PDF Clown
        run: |
          ./install-pdf-clown.sh

      - name: Maven verify
        run: |
          mvn verify -B -Pcoverage

      - name: Run Sonar analysis
        # see https://github.com/dependabot/dependabot-core/issues/3253#issuecomment-852541544
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn sonar:sonar -B

      - name: Upload JAR
        uses: actions/upload-artifact@v2.3.1
        with:
          name: artifacts
          path: ./target/pdfzoomwizard-*.jar

      - name: Extract version
        id: extract-version
        run: |
          version=$(mvn help:evaluate -q -Dexpression=project.version -DforceStdout)
          echo "::set-output name=version::${version}"

  native-linux:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2.4.0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAALVM_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: 'native-image'

      - name: Cache Maven
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ secrets.CACHE_VERSION }}

      - name: Install libraries
        run: >
          sudo apt-get update && sudo apt-get install
          libasound2-dev
          libavcodec-dev
          libavformat-dev
          libavutil-dev
          libgl-dev
          libgtk-3-dev
          libpango1.0-dev
          libxtst-dev

      - name: Install PDF Clown
        run: |
          ./install-pdf-clown.sh

      - name: Maven compile and link
        run: |
          mvn gluonfx:build -B

      - name: Prepare native image for upload
        run: |
          cp "./target/gluonfx/x86_64-linux/PDF Zoom Wizard" ./pdfzoomwizard
          tar --create --gzip --file "./pdfzoomwizard-linux-${{needs.build.outputs.version}}.tar.gz" ./pdfzoomwizard

      - name: Upload native image
        uses: actions/upload-artifact@v2.3.1
        with:
          name: artifacts
          path: ./pdfzoomwizard-linux-*.tar.gz

  native-macos:
    needs: build
    runs-on: macos-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2.4.0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAALVM_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: 'native-image'

      - name: Cache Maven
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ secrets.CACHE_VERSION }}

      - name: Install PDF Clown
        run: |
          ./install-pdf-clown.sh

      - name: Maven compile and link
        run: |
          mvn gluonfx:build -B

      - name: Prepare native image for upload
        run: |
          cp "./target/gluonfx/x86_64-darwin/PDF Zoom Wizard" ./pdfzoomwizard
          tar --create --gzip --file "./pdfzoomwizard-macos-${{needs.build.outputs.version}}.tar.gz" ./pdfzoomwizard

      - name: Upload native image
        uses: actions/upload-artifact@v2.3.1
        with:
          name: artifacts
          path: ./pdfzoomwizard-macos-*.tar.gz

  native-windows:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2.4.0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAALVM_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: 'native-image'

      - name: Cache Maven
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository/
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ secrets.CACHE_VERSION }}

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2

      - name: Install PDF Clown
        run: |
          bash ./install-pdf-clown.sh

      - name: Maven compile and link
        run: |
          mvn gluonfx:build -B

      - name: Prepare native image for upload
        run: |
          cp ".\target\gluonfx\x86_64-windows\PDF Zoom Wizard.exe" .\pdfzoomwizard.exe
          Compress-Archive -Path .\pdfzoomwizard.exe -DestinationPath ".\pdfzoomwizard-windows-${{needs.build.outputs.version}}.zip"

      - name: Upload native image
        uses: actions/upload-artifact@v2.3.1
        with:
          name: artifacts
          path: ./pdfzoomwizard-windows-*.zip

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [ native-linux, native-macos, native-windows ]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v0.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            ./pdfzoomwizard-linux-*.tar.gz
            ./pdfzoomwizard-macos-*.tar.gz
            ./pdfzoomwizard-windows-*.zip
            ./pdfzoomwizard-*.jar
